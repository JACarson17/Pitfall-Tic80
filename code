-- title:  game title
-- author: game developer
-- desc:   short description
-- script: lua
FLOOR=81 SPEED=0.7 TUNNEL=112

p={x=15,y=FLOOR,s='walk',floor=FLOOR,v=0}
t=0
score=2000
screen=4
lives=2
logs={}

function render()
   render_back()
   render_p()
   render_forground()
   render_enemies()
   render_score()
end

function screen_x()
   return (screen%8)*30
end

function screen_y()
   return (screen//8)*17
end

function render_back()
   map(screen_x(),screen_y(),30,17,0,0)
end

function render_enemies()
   for log,x in pairs(logs) do
      if x[2]%16>8 then
         spr(2,x[2],88,0,1,0,0,1,2)
      else
         spr(2,x[2],89,0,1,1,0,1,2)
      end
   end
end

function render_p()
   spr(1,p.x,p.y,0,1,0,0,1,2)
end

function render_forground()
--Lower Ground
   rect(0,98,240,6,3)
	
   if mget(screen_x()+1,screen_y()+4)~=0 then
      spr(7,56,FLOOR+15,0,1,2)
      spr(8,64,FLOOR+15,0,1,2)
      spr(8,72,FLOOR+15,0,1,2)
      spr(9,80,FLOOR+15,0,1,2)
      spr(9,88,FLOOR+15,0,1,2)
      spr(10,96,FLOOR+15,0,1,2)
      spr(10,104,FLOOR+15,0,1,2)
      spr(11,112,FLOOR+15,0,1,2)
      spr(11,120,FLOOR+15,0,1,2)
      spr(10,128,FLOOR+15,0,1,2)
      spr(10,136,FLOOR+15,0,1,2)
      spr(9,144,FLOOR+15,0,1,2)
      spr(9,152,FLOOR+15,0,1,2)
      spr(8,160,FLOOR+15,0,1,2)
      spr(8,168,FLOOR+15,0,1,2)
      spr(12,176,FLOOR+15,0,1,2)
   end
	
   if mget(screen_x()+9,screen_y()+4)~=0 then
      if t%250<125 then
         spr(4,80,FLOOR+8,0)
         spr(4,116,FLOOR+8,0)
         spr(4,152,FLOOR+8,0)
      else
         spr(5,80,FLOOR+8,0)
         spr(5,116,FLOOR+8,0)
         spr(5,152,FLOOR+8,0)
      end
   end
--Tree Cover
   rect(0,0,240,40,6)
end

function render_score()
   print(score,40,2,12,true,2)
   clock=1200-math.floor(time()/1000)
   if clock%60<10 then
      print(tostring(clock//60)..":0"..tostring(clock%60),40,18,12,true,2)
   else
      print(tostring(clock//60)..":"..tostring(clock%60),40,18,12,true,2)
   end
			
   if lives>0 then
      line(28,18,28,28,12)
   end
   if lives>1 then
      line(32,18,32,28,12)
   end
--print(p.s,120,18,12)
--print(ground(),160,18,12)
--print(p.y,200,12)
end

function collision()
   if p.s=='stuck' or p.s=='ground' then
      p.s='walk'
   end
   for log,x in pairs(logs) do
      if p.x>=x[2]-4 and p.x<=x[2]+8 and p.y>FLOOR-1 then
         score=score-4
         if x[1]==1 then
            p.s='stuck'
         elseif x[1]==0 then
            p.s='ground'
         end
      end
   end
		
   if mget(screen_x()+1,screen_y()+4)~=0
     and p.x>56 and p.x<176 then
   --x:56-176 -G1:80-88 -G2:116-124 -G3:152-160
      if p.y>FLOOR and ground()==89 then
         p.s='stuck'
         p.y=p.y+1
         if p.y>=FLOOR+7 then
            p.x=15
            p.y=FLOOR
            p.s='walk'
            render_p()
            lives=lives-1
            if lives<0 then exit() end
         end
      end
    end
		
   if p.y<=FLOOR and p.y>=FLOOR-1 and
     (mget((p.x/8)+screen_x(),screen_y()+2)==14 or
      mget((p.x/8)+screen_x(),screen_y()+2)==30 or
      mget((p.x/8)+screen_x(),screen_y()+2)==37) then
      p.s='fall'
      p.x=p.x-(p.x%8)+2
      score=score-100
   elseif p.s=='fall' and p.y>=TUNNEL then
      p.s='walk'
   end
	
end

function ground()
--returns the value of the nearest ground below the player
--pool:56-176 -G1:80-88 -G2:116-124 -G3:152-160
--Above pool with pool
   if mget(screen_x()+1,screen_y()+4)~=0 
     and (p.y<=FLOOR+8)
     and p.x>=56 and p.x<=176 then
      ---if Gators
      if mget(screen_x()+9,screen_y()+4)~=0 then
         --if above Gators
         if ((p.x>=76) and (p.x<=86)) or
            ((p.x>=112) and (p.x<=122)) or
            ((p.x>=148) and (p.x<=158)) then
            --if above Gator eyes
            if (p.x>84 and p.x<=86) or
               (p.x>120 and p.x<=122) or
               (p.x>156 and p.x<=158) then
               return FLOOR-3
            --else if Gator mouths open
            elseif t%250<125 then
               return FLOOR+8
            else
               return FLOOR-3
            end
         else
            return FLOOR+8
         end
      else
         return FLOOR+8
      end
   elseif p.s=='fall' or p.y>FLOOR+8 then
      return TUNNEL
   else
      return FLOOR
   end
end

function physics()

   if p.s=='fall' then
      p.y=p.y+1
   else
      p.y=p.y-(p.v/10)
      if p.y>ground() then 
         p.y=p.y+(p.v/10)
         p.v=p.v+(5/10)
         if p.s~='fall' then p.s='walk'	end
      end
      p.v=p.v-(5/10)
      if p.v<-16 then p.v=-16 end
   end
			
   if p.s=='upright' and wall(1) then
      p.x=p.x+SPEED
   elseif p.s=='upleft' and wall(-1) then
      p.x=p.x-SPEED
   end
			
   if p.x>234 then
      p.x=4
      if ground()==TUNNEL then
         screen=screen+2
      end
      screen=screen+1
      if screen>63 then screen=0 end
      load_screen()
   elseif p.x<0 then
      p.x=232
      if ground()==TUNNEL then
         screen=screen-2
      end
      screen=screen-1
      if screen<0 then screen=63 end
      load_screen()
   end
			
   if t%1==0 then
      for log,x in pairs(logs) do
         if x[1]==1 then
            logs[log][2]=x[2]-1
            if x[2]<=-8 then logs[log]={1,240} end
         end
      end
   end
end

function wall(dir)
   if ground()==TUNNEL and dir==-1
     and mget((p.x-1)//8+screen_x(),screen_y()+13)==36 then
      return false
   elseif ground()==TUNNEL and dir==1
     and mget((p.x+6)//8+screen_x(),screen_y()+13)==36 then
      return false
   end
   return true
end

function input()
   if p.s=='walk' then
      if btn(2) then
         if wall(-1) then p.x=p.x-SPEED end
         if keyp(48) then
            p.s='upleft'
            p.v=10
         end
      elseif btn(3) then
         if wall(1) then p.x=p.x+SPEED end
         if keyp(48) then
            p.s='upright'
            p.v=10
         end
      elseif keyp(48) then
         p.s='up'
         p.v=10
      end
   elseif p.s=='ground' then
      if btn(2) and wall(-1) then
         p.x=p.x-SPEED
      elseif btn(3) and wall(1) then
         p.x=p.x+SPEED
      end
   end
end

function load_screen()
   logs={}
   for i=1,29 do
      if mget(i+screen_x(),screen_y()+1)==2 then
         table.insert(logs, {1,i*8})
      elseif mget(i+screen_x(),screen_y()+1)==18 then
         table.insert(logs, {0,i*8})
      end
      pitwalllad=mget(i+screen_x(),screen_y()+2)
      if pitwalllad==14 or
        pitwalllad==30 then
         mset(i+screen_x(),screen_y()+11,14)
         mset(i+screen_x(),screen_y()+12,30)
      elseif pitwalllad==37 then
         mset(i+screen_x(),screen_y()+11,14)
         mset(i+screen_x(),screen_y()+12,30)
         mset(i+screen_x(),screen_y()+13,37)
         mset(i+screen_x(),screen_y()+14,37)
         mset(i+screen_x(),screen_y()+15,37)
      elseif pitwalllad==36 then
         mset(i+screen_x(),screen_y()+13,36)
         mset(i+screen_x(),screen_y()+14,36)
         mset(i+screen_x(),screen_y()+15,36)
      end
   end
   
   if mget(screen_x()+1,screen_y()+4)~=0 
     and mget(screen_x()+9,screen_y()+11)~=8 then
      mset(screen_x()+7,screen_y()+11,7)
      mset(screen_x()+8,screen_y()+11,8)
      mset(screen_x()+9,screen_y()+11,8)
      mset(screen_x()+10,screen_y()+11,9)
      mset(screen_x()+11,screen_y()+11,9)
      mset(screen_x()+12,screen_y()+11,10)
      mset(screen_x()+13,screen_y()+11,10)
      mset(screen_x()+14,screen_y()+11,11)
      mset(screen_x()+15,screen_y()+11,11)
      mset(screen_x()+16,screen_y()+11,10)
      mset(screen_x()+17,screen_y()+11,10)
      mset(screen_x()+18,screen_y()+11,9)
      mset(screen_x()+19,screen_y()+11,9)
      mset(screen_x()+20,screen_y()+11,8)
      mset(screen_x()+21,screen_y()+11,8)
      mset(screen_x()+22,screen_y()+11,12)
   end
end

load_screen()
function TIC()
   cls(0)
   t=t+1
   render()
   collision()
   physics()
   input()	
end
